name: LLVM Toolchain RISCV64
run-name: CI/CD for LLVM Toolchain RISCV64
on:
  schedule:
    # Run at 8:00 UTC every single day
    - cron: '0 8 * * *'
  workflow_dispatch:

env:
  llvm_build_dir: llvm-build
  llvm_source_dir: llvm-project
  prebuilt_dir: prebuilt
  llvm_prebuilt_dir: prebuilt/clang-riscv64
  llvm_prebuilt_file: prebuilt/clang-riscv64.tar.xz
  llvm_test_suite_repo: bvlgah/llvm-test-suite
  llvm_test_suite_src_dir: llvm-test-suite
  llvm_test_suite_build_dir: out/llvm-test-suite
  llvm_test_suite_result_dir: out/llvm-test-suite/result
  llvm_cross_prebuilt_dir: prebuilt/clang-cross-riscv64
  llvm_cross_prebuilt_file: prebuilt/clang-cross-riscv64.tar.gz
  llvm_cross_riscv64_preubilt_url: https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.03.01/riscv64-glibc-ubuntu-22.04-llvm-nightly-2024.03.01-nightly.tar.gz

jobs:
  build:
    name: Build LLVM Toolchain RISCV64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout LLVM build scripts
        uses: actions/checkout@v4
        with:
          path: ${{ env.llvm_build_dir }}
      - name: Download Prebuilt Cross LLVM Toolchain
        run: |
          cd ${{ env.llvm_build_dir }}
          mkdir -p ${{ env.llvm_cross_prebuilt_dir }}
          curl -L -o ${{ env.llvm_cross_prebuilt_file }} ${{ env.llvm_cross_riscv64_preubilt_url }}
          tar -C ${{ env.llvm_cross_prebuilt_dir }} --strip-components=1 -xf ${{ env.llvm_cross_prebuilt_file }}
      - name: Checkout LLVM source code
        run: |
          git clone --depth 1 https://github.com/llvm/llvm-project.git ${{ env.llvm_source_dir }}
      - name: Install build dependencies
        run: |
          cd ${{ env.llvm_build_dir }}
          ./script/ubuntu/install_riscv64_cross_build.sh
          python -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt
      - name: Build LLVM RISCV64
        run: |
          cd ${{ env.llvm_build_dir }}
          . venv/bin/activate
          ./script/build_driver.sh --config ./projects/llvm-riscv64.yaml --toolchain-install-dir ${{ env.llvm_cross_prebuilt_dir }} --package
      - name: Check Compressed Package Files
        run: |
          shasum -a 256 ${{ env.llvm_build_dir }}/out/llvm/riscv64-package/clang-riscv64.tar.xz
          tar -tf ${{ env.llvm_build_dir }}/out/llvm/riscv64-package/clang-riscv64.tar.xz
      - name: Upload LLVM RISCV64 binaries
        uses: actions/upload-artifact@v4
        with:
          name: clang_linux_riscv64
          path: ${{ env.llvm_build_dir }}/out/llvm/riscv64-package/clang-riscv64.tar.xz
          compression-level: 0
          retention-days: 7

  llvm-test-suite-sdag:
    name: Build and Run LLVM Test Suites with SelectionDAG
    runs-on: RISCV64
    needs: build
    container:
      image: phbjdocker/llvm-tester:22.04
    steps:
      - name: Checkout LLVM build scripts
        uses: actions/checkout@v4
        with:
          path: ${{ env.llvm_build_dir }}
      - name: Checkout LLVM Test Suites
        uses: actions/checkout@v4
        with:
          repository: ${{ env.llvm_test_suite_repo }}
          path: ${{ env.llvm_test_suite_src_dir }}
          token: ${{ secrets.LLVM_TEST_SUITE_TOKEN }}
      - name: Create Prebuilt Directory
        run: |
          mkdir -p ${{ env.llvm_build_dir }}/${{ env.prebuilt_dir }}
      - name: Download LLVM artifact
        uses: actions/download-artifact@v4
        with:
          name: clang_linux_riscv64
          path: ${{ env.llvm_build_dir }}/${{ env.prebuilt_dir }}
      - name: Decompress Prebuilt LLVM
        run: |
          cd ${{ env.llvm_build_dir }}
          mkdir -p ${{ env.llvm_prebuilt_dir }}
          tar --no-same-owner -C ${{ env.llvm_prebuilt_dir }} -xf ${{ env.llvm_prebuilt_file }}
      - name: Build and Run LLVM Test Suites
        run: |
          cd ${{ env.llvm_build_dir }}
          ./script/build_driver.sh --config ./projects/llvm-test-suite-O3-sdag.yaml --toolchain-install-dir ${{ env.llvm_prebuilt_dir }} --no-install
          mkdir -p ${{ env.llvm_test_suite_result_dir }}
          lit -v -j 1 -o ${{ env.llvm_test_suite_result_dir }}/results_sdag.json ${{ env.llvm_test_suite_build_dir }}/sdag-O3-build
      - name: Upload Test Resuilts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: llvm_test_suite_result_riscv64_sdag
          path: ${{ env.llvm_build_dir }}/${{ env.llvm_test_suite_result_dir }}/results_sdag.json
          compression-level: 9
          retention-days: 30

  llvm-test-suite-globalisel:
    name: Build and Run LLVM Test Suites with GlobalISel
    runs-on: RISCV64
    needs: build
    container:
      image: phbjdocker/llvm-tester:22.04
    steps:
      - name: Checkout LLVM build scripts
        uses: actions/checkout@v4
        with:
          path: ${{ env.llvm_build_dir }}
      - name: Checkout LLVM Test Suites
        uses: actions/checkout@v4
        with:
          repository: ${{ env.llvm_test_suite_repo }}
          path: ${{ env.llvm_test_suite_src_dir }}
          token: ${{ secrets.LLVM_TEST_SUITE_TOKEN }}
      - name: Create Prebuilt Directory
        run: |
          mkdir -p ${{ env.llvm_build_dir }}/${{ env.prebuilt_dir }}
      - name: Download LLVM artifact
        uses: actions/download-artifact@v4
        with:
          name: clang_linux_riscv64
          path: ${{ env.llvm_build_dir }}/${{ env.prebuilt_dir }}
      - name: Decompress Prebuilt LLVM
        run: |
          cd ${{ env.llvm_build_dir }}
          mkdir -p ${{ env.llvm_prebuilt_dir }}
          tar --no-same-owner -C ${{ env.llvm_prebuilt_dir }} -xf ${{ env.llvm_prebuilt_file }}
      - name: Build and Run LLVM Test Suites
        run: |
          cd ${{ env.llvm_build_dir }}
          ./script/build_driver.sh --config ./projects/llvm-test-suite-O3-globalisel.yaml --toolchain-install-dir ${{ env.llvm_prebuilt_dir }} --no-install
          mkdir -p ${{ env.llvm_test_suite_result_dir }}
          lit -v -j 1 -o ${{ env.llvm_test_suite_result_dir }}/results_globalisel.json ${{ env.llvm_test_suite_build_dir }}/globalisel-O3-build
      - name: Upload Test Resuilts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: llvm_test_suite_result_riscv64_globalisel
          path: ${{ env.llvm_build_dir }}/${{ env.llvm_test_suite_result_dir }}/results_globalisel.json
          compression-level: 9
          retention-days: 30
