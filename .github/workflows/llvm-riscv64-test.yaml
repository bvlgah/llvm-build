name: LLVM Toolchain RISCV64 (Test)
run-name: CI/CD for LLVM Toolchain RISCV64 (Test)
on:
  schedule:
    # Run at 8:00 UTC every single day
    - cron: '0 8 * * *'
  workflow_dispatch:

env:
  llvm_build_dir: llvm-build
  llvm_source_dir: llvm-project
  llvm_test_suite_dir: llvm-test-suite
  prebuilt_dir: prebuilt
  llvm_prebuilt_dir: prebuilt/clang-riscv64
  llvm_prebuilt_file: prebuilt/clang-riscv64.tar.xz
  llvm_test_suite_build_dir: out/llvm-test-suite
  llvm_test_suite_result_dir: out/llvm-test-suite/result
  llvm_cross_riscv64_preubilt_url: https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.03.01/riscv64-glibc-ubuntu-22.04-llvm-nightly-2024.03.01-nightly.tar.gz

jobs:
  llvm-test-suite-sdag:
    name: Build and Run LLVM Test Suites with SelectionDAG
    runs-on: RISCV64
    container:
      image: riscv64/ubuntu:22.04
    steps:
      - name: Install libatomic
        run: apt update && apt install -y libatomic1
      - name: Checkout LLVM build scripts
        uses: actions/checkout@v4
        with:
          path: ${{ env.llvm_build_dir }}
      - name: Install Test Dependencies
        run: |
          cd ${{ env.llvm_build_dir }}
          ./script/ubuntu/install_test.sh
          python -m venv venv
          . venv/bin/activate
          pip install deps/bin/riscv64/pydantic_core-2.16.3-cp310-cp310-linux_riscv64.whl
          pip install -r requirements.txt
      - name: Create Prebuilt Directory
        run: |
          mkdir -p ${{ env.llvm_build_dir }}/${{ env.prebuilt_dir }}
      - name: Decompress Prebuilt LLVM
        run: |
          cd ${{ env.llvm_build_dir }}
          mkdir -p ${{ env.llvm_prebuilt_dir }}
          unzip -d ${{ env.prebuilt_dir }} ./test/bin/clang_linux_riscv64.zip
          tar -C ${{ env.llvm_prebuilt_dir }} -xf ${{ env.llvm_prebuilt_file }}
      - name: Checkout LLVM Test Suites
        run: |
          git clone --depth 1 https://github.com/llvm/llvm-test-suite.git ${{ env.llvm_test_suite_dir }}
      - name: Build and Run LLVM Test Suites
        run: |
          cd ${{ env.llvm_build_dir }}
          . venv/bin/activate
          ./script/build_driver.sh --config ./projects/llvm-test-suite-O3-sdag.yaml --toolchain-install-dir ${{ env.llvm_prebuilt_dir }} --no-install
          pip install lit==18.1.2
          mkdir -p ${{ env.llvm_test_suite_result_dir }}
          lit -v -j 1 -o ${{ env.llvm_test_suite_result_dir }}/results_sdag.json ${{ env.llvm_test_suite_build_dir }}/sdag-O3-build
      - name: Upload Test Resuilts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: llvm_test_suite_result_riscv64_sdag
          path: ${{ env.llvm_build_dir }}/${{ env.llvm_test_suite_result_dir }}/results_sdag.json
          compression-level: 9

  llvm-test-suite-globalisel:
    name: Build and Run LLVM Test Suites with GlobalISel
    runs-on: RISCV64
    container:
      image: riscv64/ubuntu:22.04
    steps:
      - name: Install libatomic
        run: apt update && apt install -y libatomic1
      - name: Checkout LLVM build scripts
        uses: actions/checkout@v4
        with:
          path: ${{ env.llvm_build_dir }}
      - name: Install Test Dependencies
        run: |
          cd ${{ env.llvm_build_dir }}
          ./script/ubuntu/install_test.sh
          python -m venv venv
          . venv/bin/activate
          pip install deps/bin/riscv64/pydantic_core-2.16.3-cp310-cp310-linux_riscv64.whl
          pip install -r requirements.txt
      - name: Create Prebuilt Directory
        run: |
          mkdir -p ${{ env.llvm_build_dir }}/${{ env.prebuilt_dir }}
      - name: Decompress Prebuilt LLVM
        run: |
          cd ${{ env.llvm_build_dir }}
          mkdir -p ${{ env.llvm_prebuilt_dir }}
          unzip -d ${{ env.prebuilt_dir }} ./test/bin/clang_linux_riscv64.zip
          tar -C ${{ env.llvm_prebuilt_dir }} -xf ${{ env.llvm_prebuilt_file }}
      - name: Checkout LLVM Test Suites
        run: |
          git clone --depth 1 https://github.com/llvm/llvm-test-suite.git ${{ env.llvm_test_suite_dir }}
      - name: Build and Run LLVM Test Suites
        run: |
          cd ${{ env.llvm_build_dir }}
          . venv/bin/activate
          ./script/build_driver.sh --config ./projects/llvm-test-suite-O3-globalisel.yaml --toolchain-install-dir ${{ env.llvm_prebuilt_dir }} --no-install
          pip install lit==18.1.2
          mkdir -p ${{ env.llvm_test_suite_result_dir }}
          lit -v -j 1 -o ${{ env.llvm_test_suite_result_dir }}/results_globalisel.json ${{ env.llvm_test_suite_build_dir }}/globalisel-O3-build
      - name: Upload Test Resuilts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: llvm_test_suite_result_riscv64_globalisel
          path: ${{ env.llvm_build_dir }}/${{ env.llvm_test_suite_result_dir }}/results_globalisel.json
          compression-level: 9
