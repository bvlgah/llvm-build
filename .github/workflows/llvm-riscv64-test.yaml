name: LLVM Toolchain RISCV64 (Test)
run-name: CI/CD for LLVM Toolchain RISCV64 (Test)
on:
  workflow_dispatch:

env:
  llvm_build_dir: llvm-build
  llvm_source_dir: llvm-project
  prebuilt_dir: prebuilt
  llvm_prebuilt_dir: prebuilt/clang-riscv64
  llvm_prebuilt_file: prebuilt/clang-riscv64.tar.xz
  llvm_test_suite_repo: bvlgah/llvm-test-suite
  llvm_test_suite_src_dir: llvm-test-suite
  llvm_test_suite_build_dir: out/llvm-test-suite
  llvm_test_suite_result_dir: out/llvm-test-suite/result
  llvm_cross_riscv64_preubilt_url: https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.03.01/riscv64-glibc-ubuntu-22.04-llvm-nightly-2024.03.01-nightly.tar.gz

jobs:
  llvm-test-suite-sdag:
    name: Build and Run LLVM Test Suites with SelectionDAG
    runs-on: RISCV64
    container:
      image: phbjdocker/llvm-tester:22.04
    steps:
      - name: Checkout LLVM build scripts
        uses: actions/checkout@v4
        with:
          path: ${{ env.llvm_build_dir }}
      - name: Checkout LLVM Test Suites
        uses: actions/checkout@v4
        with:
          repository: ${{ env.llvm_test_suite_repo }}
          path: ${{ env.llvm_test_suite_src_dir }}
          token: ${{ secrets.LLVM_TEST_SUITE_TOKEN }}
      - name: Decompress Prebuilt LLVM
        run: |
          cd ${{ env.llvm_build_dir }}
          mkdir -p ${{ env.llvm_prebuilt_dir }}
          unzip -d ${{ env.prebuilt_dir }} ./test/bin/clang_linux_riscv64.zip
          tar --no-same-owner -C ${{ env.llvm_prebuilt_dir }} -xf ${{ env.llvm_prebuilt_file }}
      - name: Build and Run LLVM Test Suites
        run: |
          cd ${{ env.llvm_build_dir }}
          ./script/build_driver.sh --config ./projects/llvm-test-suite-O3-sdag.yaml --toolchain-install-dir ${{ env.llvm_prebuilt_dir }} --no-install
          mkdir -p ${{ env.llvm_test_suite_result_dir }}
          lit -v -j 1 -o ${{ env.llvm_test_suite_result_dir }}/results_sdag.json ${{ env.llvm_test_suite_build_dir }}/sdag-O3-build
      - name: Upload Test Resuilts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: llvm_test_suite_result_riscv64_sdag
          path: ${{ env.llvm_build_dir }}/${{ env.llvm_test_suite_result_dir }}/results_sdag.json
          compression-level: 9
          retention-days: 30

  llvm-test-suite-globalisel:
    name: Build and Run LLVM Test Suites with GlobalISel
    runs-on: RISCV64
    container:
      image: phbjdocker/llvm-tester:22.04
    steps:
      - name: Checkout LLVM build scripts
        uses: actions/checkout@v4
        with:
          path: ${{ env.llvm_build_dir }}
      - name: Checkout LLVM Test Suites
        uses: actions/checkout@v4
        with:
          repository: ${{ env.llvm_test_suite_repo }}
          path: ${{ env.llvm_test_suite_src_dir }}
          token: ${{ secrets.LLVM_TEST_SUITE_TOKEN }}
      - name: Decompress Prebuilt LLVM
        run: |
          cd ${{ env.llvm_build_dir }}
          mkdir -p ${{ env.llvm_prebuilt_dir }}
          unzip -d ${{ env.prebuilt_dir }} ./test/bin/clang_linux_riscv64.zip
          tar --no-same-owner -C ${{ env.llvm_prebuilt_dir }} -xf ${{ env.llvm_prebuilt_file }}
      - name: Build and Run LLVM Test Suites
        run: |
          cd ${{ env.llvm_build_dir }}
          ./script/build_driver.sh --config ./projects/llvm-test-suite-O3-globalisel.yaml --toolchain-install-dir ${{ env.llvm_prebuilt_dir }} --no-install
          mkdir -p ${{ env.llvm_test_suite_result_dir }}
          lit -v -j 1 -o ${{ env.llvm_test_suite_result_dir }}/results_globalisel.json ${{ env.llvm_test_suite_build_dir }}/globalisel-O3-build
      - name: Upload Test Resuilts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: llvm_test_suite_result_riscv64_globalisel
          path: ${{ env.llvm_build_dir }}/${{ env.llvm_test_suite_result_dir }}/results_globalisel.json
          compression-level: 9
          retention-days: 30
